{\rtf1\ansi\ansicpg1252\cocoartf2818
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import cv2\
import mediapipe as mp\
import streamlit as st\
from streamlit_webrtc import webrtc_streamer, VideoTransformerBase\
\
mp_pose = mp.solutions.pose\
mp_drawing = mp.solutions.drawing_utils\
\
class PoseDetector(VideoTransformerBase):\
    def __init__(self):\
        self.pose = mp_pose.Pose()\
\
    def transform(self, frame):\
        img = frame.to_ndarray(format="bgr24")\
        rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\
        results = self.pose.process(rgb)\
\
        if results.pose_landmarks:\
            mp_drawing.draw_landmarks(\
                img, results.pose_landmarks, mp_pose.POSE_CONNECTIONS\
            )\
        return img\
\
st.title("\uc0\u55358 \u56792  Yoga Posture AI")\
webrtc_streamer(key="pose", video_transformer_factory=PoseDetector)\
;}